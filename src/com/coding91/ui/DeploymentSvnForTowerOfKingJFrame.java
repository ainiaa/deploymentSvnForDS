/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.coding91.ui;

/**
 *
 * @author Administrator
 */
public class DeploymentSvnForTowerOfKingJFrame extends javax.swing.JFrame {

    /**
     * Creates new form DeploymentSvnForTowerOfKingJFrame
     */
    public DeploymentSvnForTowerOfKingJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        environmentjPanel = new javax.swing.JPanel();
        envENjCheckBox = new javax.swing.JCheckBox();
        envFRjCheckBox = new javax.swing.JCheckBox();
        envDEjCheckBox = new javax.swing.JCheckBox();
        envSPjCheckBox = new javax.swing.JCheckBox();
        envTWjCheckBox = new javax.swing.JCheckBox();
        contentjPanel = new javax.swing.JPanel();
        syncResourcesjButton = new javax.swing.JButton();
        syncFlashjButton = new javax.swing.JButton();
        commitResourcesjButton = new javax.swing.JButton();
        commitFlashjButton = new javax.swing.JButton();
        flashVersionjLabel = new javax.swing.JLabel();
        flashVersionjComboBox = new javax.swing.JComboBox();
        jMenuBar = new javax.swing.JMenuBar();
        filejMenu = new javax.swing.JMenu();
        createPHPTagjMenuItem = new javax.swing.JMenuItem();
        syncResourcesjMenuItem = new javax.swing.JMenuItem();
        syncFlashjMenuItem = new javax.swing.JMenuItem();
        syncPHPjMenuItem = new javax.swing.JMenuItem();
        editjMenu = new javax.swing.JMenu();
        editConfjMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        environmentjPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "同步环境", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Monospaced", 1, 14), new java.awt.Color(51, 51, 255))); // NOI18N

        envENjCheckBox.setSelected(true);
        envENjCheckBox.setText("英语");

        envFRjCheckBox.setSelected(true);
        envFRjCheckBox.setText("法语");

        envDEjCheckBox.setSelected(true);
        envDEjCheckBox.setText("德语");

        envSPjCheckBox.setText("西班牙语");

        envTWjCheckBox.setText("繁体中文");

        javax.swing.GroupLayout environmentjPanelLayout = new javax.swing.GroupLayout(environmentjPanel);
        environmentjPanel.setLayout(environmentjPanelLayout);
        environmentjPanelLayout.setHorizontalGroup(
            environmentjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(environmentjPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(envENjCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(envFRjCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(envDEjCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(envSPjCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(envTWjCheckBox)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        environmentjPanelLayout.setVerticalGroup(
            environmentjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(environmentjPanelLayout.createSequentialGroup()
                .addGroup(environmentjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(envENjCheckBox)
                    .addComponent(envFRjCheckBox)
                    .addComponent(envDEjCheckBox)
                    .addComponent(envSPjCheckBox)
                    .addComponent(envTWjCheckBox))
                .addGap(0, 8, Short.MAX_VALUE))
        );

        contentjPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "同步内容", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Monospaced", 1, 14), new java.awt.Color(153, 51, 255))); // NOI18N

        syncResourcesjButton.setText("开始同步 resources");
        syncResourcesjButton.setEnabled(false);
        syncResourcesjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                syncResourcesjButtonActionPerformed(evt);
            }
        });

        syncFlashjButton.setText("开始同步 flash");
        syncFlashjButton.setEnabled(false);
        syncFlashjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                syncFlashjButtonActionPerformed(evt);
            }
        });

        commitResourcesjButton.setText("提交resource到svn");
        commitResourcesjButton.setEnabled(false);
        commitResourcesjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commitResourcesjButtonActionPerformed(evt);
            }
        });

        commitFlashjButton.setText("提交flash到svn");
        commitFlashjButton.setEnabled(false);
        commitFlashjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commitFlashjButtonActionPerformed(evt);
            }
        });

        flashVersionjLabel.setText("flash版本:");

        flashVersionjComboBox.setEditable(true);

        javax.swing.GroupLayout contentjPanelLayout = new javax.swing.GroupLayout(contentjPanel);
        contentjPanel.setLayout(contentjPanelLayout);
        contentjPanelLayout.setHorizontalGroup(
            contentjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentjPanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(syncResourcesjButton)
                .addGap(18, 18, 18)
                .addComponent(commitResourcesjButton)
                .addGap(33, 33, 33)
                .addComponent(flashVersionjLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(flashVersionjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(syncFlashjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(commitFlashjButton)
                .addContainerGap(30, Short.MAX_VALUE))
        );
        contentjPanelLayout.setVerticalGroup(
            contentjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentjPanelLayout.createSequentialGroup()
                .addGroup(contentjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(syncResourcesjButton)
                    .addComponent(syncFlashjButton)
                    .addComponent(commitResourcesjButton)
                    .addComponent(commitFlashjButton)
                    .addComponent(flashVersionjLabel)
                    .addComponent(flashVersionjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        filejMenu.setText("文件");

        createPHPTagjMenuItem.setText("创建PHPTag");
        filejMenu.add(createPHPTagjMenuItem);

        syncResourcesjMenuItem.setText("同步resources");
        filejMenu.add(syncResourcesjMenuItem);

        syncFlashjMenuItem.setText("同步flash");
        syncFlashjMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                syncFlashjMenuItemActionPerformed(evt);
            }
        });
        filejMenu.add(syncFlashjMenuItem);

        syncPHPjMenuItem.setText("同步PHP");
        filejMenu.add(syncPHPjMenuItem);

        jMenuBar.add(filejMenu);

        editjMenu.setText("编辑");

        editConfjMenuItem.setText("修改配置项");
        editjMenu.add(editConfjMenuItem);

        jMenuBar.add(editjMenu);

        setJMenuBar(jMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(environmentjPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(contentjPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(environmentjPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(contentjPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(143, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void syncFlashjMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_syncFlashjMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_syncFlashjMenuItemActionPerformed

    private void syncResourcesjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_syncResourcesjButtonActionPerformed
        syncTemplate("resources", "syncResourcesjButton");
    }//GEN-LAST:event_syncResourcesjButtonActionPerformed

    private void syncFlashjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_syncFlashjButtonActionPerformed
        if (flashVersionjComboBox.getSelectedItem() == null || flashVersionjComboBox.getSelectedItem().toString().isEmpty()) {
            MessageUtil.showMessageDialogMessage("请选择需要同步的flash");
            return;
        }
        syncTemplate("flash", "syncFlashjButton");
    }//GEN-LAST:event_syncFlashjButtonActionPerformed

    private void commitResourcesjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commitResourcesjButtonActionPerformed
        disableAllButton();
        new Thread(new Runnable() {
            @Override
            public void run() {
                String special = "online";
                String content = "resources";
                List<String> envList = getEnv();
                String env = envList.get(0);
                String onlineContentPathKey = String.format("%s.%s.sysfile.path", content, special);
                WorkingCopyImprove wc;
                wc = new WorkingCopyImprove(env, special, content);
                String onlineContentPath = wc.getConfByEnv(env).get(onlineContentPathKey);
                try {
                    Process process = Runtime.getRuntime().exec("TortoiseProc.exe /command:commit /path:" + onlineContentPath + " /logmsg:\"commit resource to online env\" /closeonend:2");
                    int result = process.waitFor();
                    changeButtonEnableExcept("commitFlashjButton");
                    if (result == -1) {
                        System.out.println("commit canceled");
                    } else if (result == 0) {
                        System.out.println("commit done!");
                    }
                } catch (IOException | InterruptedException ex) {
                    Logger.getLogger(DeploymentSvnForDS.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }).start();
    }//GEN-LAST:event_commitResourcesjButtonActionPerformed

    private void commitFlashjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commitFlashjButtonActionPerformed
        disableAllButton();
        new Thread(new Runnable() {
            @Override
            public void run() {
                String special = "online";
                String content = "flash";
                List<String> envList = getEnv();
                String env = envList.get(0);
                String onlineContentPathKey = String.format("%s.%s.sysfile.path", content, special);
                WorkingCopyImprove wc;
                wc = new WorkingCopyImprove(env, special, content);
                String onlineContentPath = wc.getConfByEnv(env).get(onlineContentPathKey);
                try {
                    Process process = Runtime.getRuntime().exec("TortoiseProc.exe /command:commit /path:" + onlineContentPath + " /logmsg:\"commit flash to online env\" /closeonend:2");
                    int result = process.waitFor();
                    changeButtonEnableExcept("commitResourcesjButton");
                    if (result == -1) {
                        System.out.println("commit canceled");
                    } else if (result == 0) {
                        System.out.println("commit done!");
                    }
                } catch (IOException | InterruptedException ex) {
                    Logger.getLogger(DeploymentSvnForDS.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }).start();
    }//GEN-LAST:event_commitFlashjButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DeploymentSvnForTowerOfKingJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DeploymentSvnForTowerOfKingJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DeploymentSvnForTowerOfKingJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DeploymentSvnForTowerOfKingJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DeploymentSvnForTowerOfKingJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton commitFlashjButton;
    private javax.swing.JButton commitResourcesjButton;
    private javax.swing.JPanel contentjPanel;
    private javax.swing.JMenuItem createPHPTagjMenuItem;
    private javax.swing.JMenuItem editConfjMenuItem;
    private javax.swing.JMenu editjMenu;
    private javax.swing.JCheckBox envDEjCheckBox;
    private javax.swing.JCheckBox envENjCheckBox;
    private javax.swing.JCheckBox envFRjCheckBox;
    private javax.swing.JCheckBox envSPjCheckBox;
    private javax.swing.JCheckBox envTWjCheckBox;
    private javax.swing.JPanel environmentjPanel;
    private javax.swing.JMenu filejMenu;
    private javax.swing.JComboBox flashVersionjComboBox;
    private javax.swing.JLabel flashVersionjLabel;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JButton syncFlashjButton;
    private javax.swing.JMenuItem syncFlashjMenuItem;
    private javax.swing.JMenuItem syncPHPjMenuItem;
    private javax.swing.JButton syncResourcesjButton;
    private javax.swing.JMenuItem syncResourcesjMenuItem;
    // End of variables declaration//GEN-END:variables
}
